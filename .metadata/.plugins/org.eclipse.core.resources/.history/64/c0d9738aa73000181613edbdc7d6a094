package apps;

public class TileVideoApp extends VideoApp {
	
	/**
	 * Given an area of a frame (a tile), specified by a frame, an x y coordinate pair, and a size. 
	 * Returns the frame number that will minimize total differences.
	 *
	 * @param frame Image of the current frame. 
	 * @param tile_x X coordinate of the tile.
	 * @param tile_y Y coordinate of the tile.
	 * @param tileSize Size of the tile. If this is 1, it will do bucketing on a pixel level.
	 * @param buckets Number of buckets we want our model to have for each tile.
	 */
	private static int tileNum(int[][] frame, int tile_x, int tile_y, int tileSize, int buckets){
		int bucketSize = 256/buckets;
		int tileNum = 0;
		int frameVal;
		for (int y=tile_y; y<tileSize + tile_y; y++) {
			for (int x=tile_x; x<tile_x+tileSize; x++) {
				//Want to get the buckets which start at 0 and spread out [-bucketSize / 2 , bucketSize/2]
				//to be initialize at 0. 
				frameVal = (frame[x][y] + bucketSize/2) % 256;
				int bucketNum = 0;
				while(frameVal >= bucketSize){ //[0 to bucketSize) counts as bucket.
					bucketNum++;
					frameVal=- bucketSize;
				}
				tileNum *= bucketSize;//If the number of buckets is a power of 2, this will shift the bits of tileNum.
				tileNum += bucketNum;//Append the bits of the tile count on the end
				}
		}
		return tileNum;
		
	}
}
